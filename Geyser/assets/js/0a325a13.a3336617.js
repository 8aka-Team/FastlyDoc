"use strict";(self.webpackChunkgeyser_wiki=self.webpackChunkgeyser_wiki||[]).push([[2539],{69996:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"geyser/setup/self/viaproxy","title":"Geyser ViaProxy Setup","description":"Learn how to set up Geyser with ViaProxy.","source":"@site/wiki/geyser/setup/self/viaproxy.mdx","sourceDirName":"geyser/setup/self","slug":"/geyser/setup/self/viaproxy","permalink":"/wiki/geyser/setup/self/viaproxy","draft":false,"unlisted":false,"editUrl":"https://github.com/GeyserMC/GeyserWebsite/tree/master/wiki/geyser/setup/self/viaproxy.mdx","tags":[],"version":"current","frontMatter":{"title":"Geyser ViaProxy Setup","description":"Learn how to set up Geyser with ViaProxy."}}');var r=o(74848),i=o(28453);const s={title:"Geyser ViaProxy Setup",description:"Learn how to set up Geyser with ViaProxy."},l=void 0,a={},c=[];function d(e){const n={a:"a",admonition:"admonition",code:"code",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/ViaVersion/ViaProxy?tab=readme-ov-file#usage-for-players-gui",children:"Setup ViaProxy"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Download the plugin from ",(0,r.jsx)(n.a,{href:"/download",children:"the download page"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Place the Geyser-ViaProxy.jar in the ",(0,r.jsx)(n.code,{children:"plugins"})," folder, and restart ViaProxy."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Open your Geyser config, located in ",(0,r.jsx)(n.code,{children:"/plugins/Geyser/config.yml"}),", and find the following:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",children:"bedrock: \n    # The IP address that will listen for connections. \n    # Generally, you should only uncomment and change this if you want to limit what IPs can connect to your server. \n    #address: 0.0.0.0 \n\n    # The port that will listen for connections. This is the port that Bedrock players will use to connect to your server.\n    port: 19132 \n"})}),"\n",(0,r.jsxs)(n.p,{children:["The vital part is the port. This is the port that Bedrock players will use to connect to your server!\nIf you enable ",(0,r.jsx)(n.code,{children:"clone-remote-port"}),", the port will be overridden and the ViaProxy port is used.\nSince you are self-hosting, you can choose the port freely - the default port is 19132."]}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Important"}),": Other services/plugins that rely on ports with UDP, such as Voice Chats or Query, cannot share the port with Geyser."]}),"\n",(0,r.jsxs)(n.p,{children:["If you use the ViaProxy GUI you can use its account management system to join online mode servers with Bedrock Edition. If you use the ViaProxy CLI and want to allow Bedrock players to join your online mode server you have to install and ",(0,r.jsx)(n.a,{href:"/wiki/floodgate/setup",children:"set up Floodgate"}),". ",(0,r.jsx)("br",{})]}),"\n",(0,r.jsxs)(n.p,{children:["NOTE: The value of the ",(0,r.jsx)(n.code,{children:"auth-type"})," field is ignored and managed by ViaProxy automatically."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Connecting to your server"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connecting locally in the same network"})}),"\n",(0,r.jsxs)(n.p,{children:["On the same device as the server, you can connect using ",(0,r.jsx)(n.code,{children:"localhost"}),", or ",(0,r.jsx)(n.code,{children:"127.0.0.1"})," as the address.\nDo note: When hosting and playing on the same Windows device, you will need the ",(0,r.jsx)(n.a,{href:"/wiki/geyser/fixing-unable-to-connect-to-world#using-geyser-on-the-same-computer",children:"loopback fix"}),".\nOther devices in the same local network can use your local IPv4 to connect - it starts with ",(0,r.jsx)(n.code,{children:"10."})," or ",(0,r.jsx)(n.code,{children:"192.168."}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Connecting from a different network"})}),"\n",(0,r.jsx)(n.p,{children:"You will need to expose the port Geyser runs on to the Internet if you want players from outside your network to join.\nTo achieve that, you have two options:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Port forwarding: Open the Geyser port (e.g. 19132) on the UDP protocol in your router/modem, and in the Windows/Linux firewall.\n",(0,r.jsx)(n.a,{href:"/wiki/geyser/port-forwarding",children:"Our port forwarding guide"})," explains how to do this in detail.\nAfter doing this, players can connect with your public IPv4 + port to your server."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["playit.gg: Instead of opening a port (which might not be an option/if you do not want to expose your home ip), you can use\nthe playit.gg service to create a tunnel for you to route the traffic through. See our ",(0,r.jsx)(n.a,{href:"/wiki/geyser/playit-gg",children:"playit.gg guide"}),".\nNgrok will not work since it is TCP-only."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Verify whether connections from other networks are possible by running ",(0,r.jsx)(n.code,{children:"geyser connectiontest <ip> <port>"})," in the console."]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.admonition,{type:"info",children:(0,r.jsxs)(n.p,{children:["To allow Bedrock Edition players to join your server without needing to log in to a paid Java Edition account, you can use ",(0,r.jsx)(n.a,{href:"/wiki/floodgate/setup",children:"Floodgate"}),"."]})})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var t=o(96540);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);