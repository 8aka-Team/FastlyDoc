import{_ as s,c as a,o as t,af as e}from"./chunks/framework.2x6h2CDZ.js";const c=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"developer/networking/authentication.md","filePath":"en/developer/networking/authentication.md"}'),n={name:"developer/networking/authentication.md"};function h(l,i,r,o,p,k){return t(),a("div",null,i[0]||(i[0]=[e(`<h2 id="authentication" tabindex="-1">Authentication <a class="header-anchor" href="#authentication" aria-label="Permalink to &quot;Authentication&quot;">​</a></h2><h3 id="why-authentication" tabindex="-1">Why authentication <a class="header-anchor" href="#why-authentication" aria-label="Permalink to &quot;Why authentication&quot;">​</a></h3><p>Offline accounts, that is, accounts generated from a player&#39;s username without contacting an authorization or authentication server, can have any nickname chosen. This, without additional plugins, means that players can impersonate other players, including those with operator permissions.</p><h3 id="offline-server" tabindex="-1">Offline server <a class="header-anchor" href="#offline-server" aria-label="Permalink to &quot;Offline server&quot;">​</a></h3><p>By default, <code>online_mode</code> is enabled in the configuration. This enables authentication, disabling offline accounts. If you want to allow offline accounts, you can disable <code>online_mode</code> in <code>configuration.toml</code>.</p><h3 id="how-yggdrasil-auth-works" tabindex="-1">How Yggdrasil Auth works <a class="header-anchor" href="#how-yggdrasil-auth-works" aria-label="Permalink to &quot;How Yggdrasil Auth works&quot;">​</a></h3><ol><li>The client gets an authentication token and UUID from the launcher.</li><li>The client, during loading, fetches data from the authorization/authentication server using the authentication token, such as various signing keys and the list of blocked servers.</li><li>The client, when joining the server, sends a join request to the authorization/authentication servers. Mojang servers can deny this request if the account is banned.</li><li>The client sends its identification to the server in a packet.</li><li>The server, based on this identification, sends a <code>hasJoined</code> request to the authorization/authentication servers. If it succeeds, it obtains the player information, such as the skin.</li></ol><h3 id="custom-authentication-server" tabindex="-1">Custom Authentication Server <a class="header-anchor" href="#custom-authentication-server" aria-label="Permalink to &quot;Custom Authentication Server&quot;">​</a></h3><p>Pumpkin supports custom authentication servers. You can replace the authentication URL in <code>features.toml</code>.</p><h4 id="how-pumpkin-authentication-works" tabindex="-1">How Pumpkin Authentication Works <a class="header-anchor" href="#how-pumpkin-authentication-works" aria-label="Permalink to &quot;How Pumpkin Authentication Works&quot;">​</a></h4><ol><li><strong>GET Request:</strong> Pumpkin sends a GET request to the specified authentication URL.</li><li><strong>Status Code 200:</strong> If the authentication is successful, the server responds with a status code of 200.</li><li><strong>Parse JSON Game Profile:</strong> Pumpkin parses the JSON game profile returned in the response.</li></ol><h4 id="game-profile" tabindex="-1">Game Profile <a class="header-anchor" href="#game-profile" aria-label="Permalink to &quot;Game Profile&quot;">​</a></h4><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> GameProfile</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> UUID</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    properties</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Vec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    profile_actions</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Option</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Vec</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ProfileAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Optional, only present when actions are applied</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="property" tabindex="-1">Property <a class="header-anchor" href="#property" aria-label="Permalink to &quot;Property&quot;">​</a></h5><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Property</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Base64 encoded</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    signature</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Option</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">String</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// Optional, Base64 encoded</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h5 id="profile-action" tabindex="-1">Profile Action <a class="header-anchor" href="#profile-action" aria-label="Permalink to &quot;Profile Action&quot;">​</a></h5><div class="language-rust vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">rust</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">enum</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> ProfileAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    FORCED_NAME_CHANGE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    USING_BANNED_SKIN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,17)]))}const u=s(n,[["render",h]]);export{c as __pageData,u as default};
