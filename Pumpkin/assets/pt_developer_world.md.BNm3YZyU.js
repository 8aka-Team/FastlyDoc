import{_ as e,c as o,o as r,af as i}from"./chunks/framework.2x6h2CDZ.js";const p=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pt/developer/world.md","filePath":"pt/developer/world.md"}'),d={name:"pt/developer/world.md"};function t(n,a,s,m,l,c){return r(),o("div",null,a[0]||(a[0]=[i('<h3 id="formatos-de-mundo" tabindex="-1">Formatos de Mundo <a class="header-anchor" href="#formatos-de-mundo" aria-label="Permalink to &quot;Formatos de Mundo&quot;">​</a></h3><h4 id="formato-de-arquivo-de-regiao" tabindex="-1">Formato de Arquivo de Região <a class="header-anchor" href="#formato-de-arquivo-de-regiao" aria-label="Permalink to &quot;Formato de Arquivo de Região&quot;">​</a></h4><p>Do Minecraft Beta 1.3 até o Release 1.2, era utilizado um formato de Minecraft conhecido como &quot;Formato de Arquivo de Região&quot;.</p><p>Os arquivos armazenados nesse formato são arquivos <code>.mcr</code>, cada um armazenando um grupo de 32x32 chunks, chamado de região.</p><p>Mais detalhes podem ser encontrados na <a href="https://minecraft.wiki/w/Region_file_format" target="_blank" rel="noreferrer">Minecraft Wiki</a>.</p><h4 id="formato-de-arquivo-anvil" tabindex="-1">Formato de Arquivo Anvil <a class="header-anchor" href="#formato-de-arquivo-anvil" aria-label="Permalink to &quot;Formato de Arquivo Anvil&quot;">​</a></h4><p>Substituindo o Formato de Arquivo de Região após o Minecraft Release 1.2, este é o formato de arquivo usado para armazenar mundos modernos do Minecraft: Java Edition.</p><p>Os arquivos armazenados nesse formato são arquivos <code>.mca</code>. Embora utilize a mesma lógica de regiões, houve várias mudanças. As mudanças notáveis incluem o aumento do limite de altura para 256, depois para 320, assim como um maior número de IDs de blocos.</p><p>Mais detalhes podem ser encontrados na <a href="https://minecraft.wiki/w/Anvil_file_format" target="_blank" rel="noreferrer">Minecraft Wiki</a>.</p><h4 id="formato-de-arquivo-linear" tabindex="-1">Formato de Arquivo Linear <a class="header-anchor" href="#formato-de-arquivo-linear" aria-label="Permalink to &quot;Formato de Arquivo Linear&quot;">​</a></h4><p>Existe um formato de arquivo mais moderno conhecido como Formato de Arquivo de Região Linear. Ele economiza espaço em disco e usa a biblioteca zstd em vez de zlib. Isso é benéfico, pois o zlib é extremamente antigo e desatualizado.</p><p>Os arquivos armazenados nesse formato são arquivos <code>.linear</code>, e eles economizam cerca de 50% de espaço em disco no Overworld e no Nether, e 95% no End.</p><p>Mais detalhes podem ser encontrados na página do GitHub para <a href="https://github.com/xymb-endcrystalme/LinearRegionFileFormatTools" target="_blank" rel="noreferrer">LinearRegionFileFormatTools</a>.</p><h4 id="formato-de-arquivo-slime" tabindex="-1">Formato de Arquivo Slime <a class="header-anchor" href="#formato-de-arquivo-slime" aria-label="Permalink to &quot;Formato de Arquivo Slime&quot;">​</a></h4><p>Desenvolvido pela Hypixel para corrigir muitos dos problemas do formato de arquivo Anvil, o Slime também substitui o zlib e economiza espaço em comparação com o Anvil. Ele salva o mundo inteiro em um único arquivo de salvamento e permite que esse arquivo seja carregado em várias instâncias.</p><p>Os arquivos armazenados nesse formato são arquivos <code>.slime</code>.</p><p>Mais detalhes podem ser encontrados na página do GitHub para <a href="https://github.com/cijaaimee/Slime-World-Manager#:~:text=Slime%20World%20Manager%20is%20a,worlds%20faster%20and%20save%20space." target="_blank" rel="noreferrer">Slime World Manager</a>, assim como no <a href="https://hypixel.net/threads/dev-blog-5-storing-your-skyblock-island.2190753/" target="_blank" rel="noreferrer">Dev Blog #5</a> da Hypixel.</p><h4 id="formato-de-arquivo-schematic" tabindex="-1">Formato de Arquivo Schematic <a class="header-anchor" href="#formato-de-arquivo-schematic" aria-label="Permalink to &quot;Formato de Arquivo Schematic&quot;">​</a></h4><p>Diferentemente dos outros formatos de arquivo listados, o Formato de Arquivo Schematic não é usado para armazenar mundos do Minecraft, mas sim dentro de programas de terceiros, como MCEdit, WorldEdit e Schematica.</p><p>Os arquivos armazenados nesse formato são arquivos <code>.schematic</code>, e são armazenados no formato NBT.</p><p>Mais detalhes podem ser encontrados na <a href="https://minecraft.wiki/w/Schematic_file_format" target="_blank" rel="noreferrer">Minecraft Wiki</a>.</p><h3 id="geracao-de-mundo" tabindex="-1">Geração de Mundo <a class="header-anchor" href="#geracao-de-mundo" aria-label="Permalink to &quot;Geração de Mundo&quot;">​</a></h3><p>Quando o servidor está iniciando, ele verifica se há um salvamento presente, também conhecido como &quot;mundo&quot;.</p><p>Pumpkin então chama a geração do mundo:</p><h4 id="salvamento-presente" tabindex="-1">Salvamento Presente <a class="header-anchor" href="#salvamento-presente" aria-label="Permalink to &quot;Salvamento Presente&quot;">​</a></h4><p><code>AnvilChunkReader</code> é chamado para processar os arquivos de região para o salvamento dado.</p><ul><li>Como mencionado acima, os arquivos de região armazenam chunks de 32x32. <blockquote><p>Cada arquivo de região é nomeado de acordo com as coordenadas de onde ele está no mundo.</p></blockquote></li></ul><blockquote><p>r.{}.{}.mca</p></blockquote><ul><li>A tabela de localização é lida a partir do arquivo de salvamento, representando as coordenadas do chunk.</li><li>A tabela de timestamp é lida a partir do arquivo de salvamento, representando a última vez que o chunk foi modificado.</li></ul><h4 id="sem-salvamento-presente" tabindex="-1">Sem Salvamento Presente <a class="header-anchor" href="#sem-salvamento-presente" aria-label="Permalink to &quot;Sem Salvamento Presente&quot;">​</a></h4><p>A semente do mundo é definida como &quot;0&quot;. No futuro, ela será definida para o valor na configuração &quot;básica&quot;.</p><p><code>PlainsGenerator</code> é chamado, já que até agora <code>Plains</code> é o único bioma implementado.</p><ul><li><code>PerlinTerrainGenerator</code> é chamado para definir a altura do chunk.</li><li>A altura da pedra é definida 5 blocos abaixo da altura do chunk.</li><li>A altura da terra é definida 2 blocos abaixo da altura do chunk.</li><li>Blocos de grama aparecem no topo da terra.</li><li>Bedrock é definido em y = -64.</li><li>Flores e grama curta são espalhadas aleatoriamente.</li></ul><p><code>SuperflatGenerator</code> também está disponível, mas não é atualmente chamável.</p><ul><li>Bedrocks é definido em y = -64.</li><li>A terra é definida dois blocos para cima.</li><li>Os blocos de grama são definidos um bloco a mais para cima.</li></ul><p>Os blocos podem ser colocados e quebrados, mas as mudanças não podem ser salvas em nenhum formato de mundo. Mundos do formato Anvil são atualmente apenas leitura.</p>',36)]))}const h=e(d,[["render",t]]);export{p as __pageData,h as default};
