import{_ as i,c as a,o as t,af as e}from"./chunks/framework.2x6h2CDZ.js";const c=JSON.parse('{"title":"Quick Start","description":"","frontmatter":{},"headers":[],"relativePath":"about/quick-start.md","filePath":"en/about/quick-start.md"}'),l={name:"about/quick-start.md"};function n(p,s,r,h,o,k){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h1><p><strong>Current Status:</strong> Pre-release: Currently under development and not yet ready for official release.</p><h2 id="rust" tabindex="-1">Rust <a class="header-anchor" href="#rust" aria-label="Permalink to &quot;Rust&quot;">​</a></h2><p>To run Pumpkin with Rust, ensure you have <a href="https://www.rust-lang.org/tools/install" target="_blank" rel="noreferrer">Rust</a> installed.</p><ol><li>Clone the repository:</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/Pumpkin-MC/Pumpkin.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Pumpkin</span></span></code></pre></div><ol start="2"><li><p><strong>Optional:</strong> If you wish, you can place a Vanilla world into the <code>Pumpkin/</code> directory. Just name the world folder <code>world</code>.</p></li><li><p>Run:</p></li></ol><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>The build process may take a while, due to heavy optimizations for release builds.</p></div><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --release</span></span></code></pre></div><ol start="4"><li><strong>Optional:</strong> If you want to use your CPU features, you can set the <code>target-cpu=native</code> Rust compiler flag.</li></ol><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">RUSTFLAGS</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;-C target-cpu=native&#39;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> cargo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --release</span></span></code></pre></div><h2 id="docker" tabindex="-1">Docker <a class="header-anchor" href="#docker" aria-label="Permalink to &quot;Docker&quot;">​</a></h2><div class="important custom-block github-alert"><p class="custom-block-title">IMPORTANT</p><p>Docker support is currently experimental.</p></div><p>If you haven&#39;t already, you need to <a href="https://docs.docker.com/engine/install/" target="_blank" rel="noreferrer">install Docker</a>. After installing Docker, you can run the following command to start the server:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -p</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">exposed_por</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">t</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:25565</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -v</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">server_data_locatio</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">n</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">:/pumpkin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ghcr.io/pumpkin-mc/pumpkin:master</span></span></code></pre></div><ul><li><code>&lt;exposed_port&gt;</code>: The port you want to connect to Pumpkin with, for example <code>25565</code>.</li><li><code>&lt;server_data_location&gt;</code>: The location where you want your server config and data to be stored, for example <code>./data</code>.</li></ul><h3 id="example" tabindex="-1">Example <a class="header-anchor" href="#example" aria-label="Permalink to &quot;Example&quot;">​</a></h3><p>To run Pumpkin on port <code>25565</code> and store data in a directory called <code>./data</code>, you would run the following command:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --rm</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 25565:25565</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -v</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./data:/pumpkin</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    -it</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ghcr.io/pumpkin-mc/pumpkin:master</span></span></code></pre></div><h2 id="test-server" tabindex="-1">Test Server <a class="header-anchor" href="#test-server" aria-label="Permalink to &quot;Test Server&quot;">​</a></h2><p>Pumpkin has a test server maintained by @kralverde. Its runs on the latest commit of Pumpkin&#39;s master branch.</p><ul><li><strong>IP:</strong> pumpkin.kralverde.dev</li></ul><p><strong>Specs:</strong></p><ul><li>OS: Debian GNU/Linux bookworm 12.7 x86_64</li><li>Kernel: Linux 6.1.0-21-cloud-amd64</li><li>CPU: Intel Core (Haswell, no TSX) (2) @ 2.40 GHz</li><li>RAM: 4GB DIMM</li></ul>`,24)]))}const u=i(l,[["render",n]]);export{c as __pageData,u as default};
