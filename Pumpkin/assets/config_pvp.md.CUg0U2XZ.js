import{_ as i,c as s,o as e,af as t}from"./chunks/framework.2x6h2CDZ.js";const k=JSON.parse('{"title":"PVP","description":"","frontmatter":{},"headers":[],"relativePath":"config/pvp.md","filePath":"en/config/pvp.md"}'),l={name:"config/pvp.md"};function n(p,a,o,h,d,r){return e(),s("div",null,a[0]||(a[0]=[t('<h1 id="pvp" tabindex="-1">PVP <a class="header-anchor" href="#pvp" aria-label="Permalink to &quot;PVP&quot;">​</a></h1><p>PVP is a core part of the Vanilla mechanics, with even the smallest change affecting gameplay. Pumpkin allows you to fully configure PVP.</p><h2 id="configuring-pvp" tabindex="-1">Configuring PVP <a class="header-anchor" href="#configuring-pvp" aria-label="Permalink to &quot;Configuring PVP&quot;">​</a></h2><h4 id="enabled-boolean" tabindex="-1"><code>enabled</code>: Boolean <a class="header-anchor" href="#enabled-boolean" aria-label="Permalink to &quot;`enabled`: Boolean&quot;">​</a></h4><p>Whether PVP is enabled or not.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-9NAez" id="tab-5aWnew4" checked><label data-title="features.toml" for="tab-5aWnew4">features.toml</label></div><div class="blocks"><div class="language-toml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pvp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">enabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></div></div><h4 id="hurt-animation-boolean" tabindex="-1"><code>hurt_animation</code>: Boolean <a class="header-anchor" href="#hurt-animation-boolean" aria-label="Permalink to &quot;`hurt_animation`: Boolean&quot;">​</a></h4><p>Whether to show red hurt animation and FOV bobbing or not.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-Rzyfd" id="tab-ZzDb5qV" checked><label data-title="features.toml" for="tab-ZzDb5qV">features.toml</label></div><div class="blocks"><div class="language-toml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pvp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hurt_animation = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></div></div><h4 id="protect-creative-boolean" tabindex="-1"><code>protect_creative</code>: Boolean <a class="header-anchor" href="#protect-creative-boolean" aria-label="Permalink to &quot;`protect_creative`: Boolean&quot;">​</a></h4><p>Whether to protect players in creative against PVP or not.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-lCLRV" id="tab-gEJhXk-" checked><label data-title="features.toml" for="tab-gEJhXk-">features.toml</label></div><div class="blocks"><div class="language-toml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pvp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protect_creative = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></div></div><h4 id="knockback-boolean" tabindex="-1"><code>knockback</code>: Boolean <a class="header-anchor" href="#knockback-boolean" aria-label="Permalink to &quot;`knockback`: Boolean&quot;">​</a></h4><p>Whether attacks should have knockback or not.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-l6GdJ" id="tab-r7Cfvnr" checked><label data-title="features.toml" for="tab-r7Cfvnr">features.toml</label></div><div class="blocks"><div class="language-toml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pvp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">knockback = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></div></div><h4 id="swing-boolean" tabindex="-1"><code>swing</code>: Boolean <a class="header-anchor" href="#swing-boolean" aria-label="Permalink to &quot;`swing`: Boolean&quot;">​</a></h4><p>Whether players should swing when attacking or not.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-tqv_n" id="tab-GgkXTOo" checked><label data-title="features.toml" for="tab-GgkXTOo">features.toml</label></div><div class="blocks"><div class="language-toml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pvp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line highlighted"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">swing = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></div></div><h2 id="default-config" tabindex="-1">Default Config <a class="header-anchor" href="#default-config" aria-label="Permalink to &quot;Default Config&quot;">​</a></h2><p>By default, all PVP options are enabled in order to match vanilla behavior.</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-ESfbV" id="tab-ZbSnqrj" checked><label data-title="features.toml" for="tab-ZbSnqrj">features.toml</label></div><div class="blocks"><div class="language-toml vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">toml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pvp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">enabled = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hurt_animation = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">protect_creative = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">knockback = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>\n<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">swing = </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span></code></pre></div></div></div>',21)]))}const g=i(l,[["render",n]]);export{k as __pageData,g as default};
